<?php

/**
 * @file
 * Contains entityconnect.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\entityconnect\Controller\EntityconnectController;
use Drupal\entityconnect\EntityconnectFormUtils;

/**
 * Implements hook_help().
 */
function entityconnect_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the entityconnect module.
    case 'help.page.entityconnect':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Entity Connect') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function entityconnect_theme() {
  $theme = [
    // Entityconnect Entity add list page.
    'entityconnect_entity_add_list' => [
      'variables' => array(
        'items' => NULL,
        'cache_id' => NULL,
        'cancel_link' => NULL,
      ),
      'file' => 'templates/entityconnect.theme.inc',
    ],
  ];

  return $theme;
}

/**
 * Implements hook_form_FORM_ID_alter() for field_config_edit_form.
 */
function entityconnect_form_field_config_edit_form_alter(array &$form, FormStateInterface $form_state) {
  EntityconnectFormUtils::fieldConfigEditFormAlter($form, $form_state);
}

/**
 * Implements hook_form_alter().
 */
function entityconnect_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Get the cache from the id and set the form state if this is a child form.
  if (!empty($_REQUEST['build_cache_id'])) {
    $cid = $_REQUEST['build_cache_id'];
    $cache_data = \Drupal::getContainer()->get('entityconnect.cache')->get($cid);
    if (!empty($_REQUEST['child'])) {
      $form_state->set('#entityconnect_child_form', [$cid => $cache_data]);
    }
    if (isset($_REQUEST['return']) && !empty($cache_data) && $cache_data['form']['#form_id'] == $form_id) {
      unset($_REQUEST['build_cache_id']);
      EntityconnectFormUtils::returnFormAlter($form, $form_state, $cache_data);
      \Drupal::getContainer()->get('entityconnect.cache')->delete($cid);
    }
  }

  // If this form is a child form let's add alter for that purpose
  // Note that we are doing this here because when we return to a form it gets
  // rebuilt so this will get caught in the rebuilt.
  if ($cache = $form_state->get('#entityconnect_child_form')) {
    EntityconnectFormUtils::childFormAlter($form, $form_state, $form_id, key($cache));
  }

  // Adds entity connect buttons to any ref fields in the form.
  EntityconnectFormUtils::entityFormAlter($form, $form_state);

}

/**
 * Implements hook_entityconnect_add_info().
 */
function entityconnect_entityconnect_add_info($cache_id, $entity_type, $acceptable_types) {
  return EntityconnectController::addInfo($cache_id, $entity_type, $acceptable_types);
}

/**
 * Implements hook_entityconnect_edit_info().
 */
function entityconnect_entityconnect_edit_info($cache_id, $entity_type, $target_id) {
  return EntityconnectController::editInfo($cache_id, $entity_type, $target_id);
}
