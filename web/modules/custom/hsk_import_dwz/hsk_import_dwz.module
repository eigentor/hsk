<?php

/*
 * Implements hook_cron()
 */
function hsk_import_dwz_cron() {
  $client = \Drupal::httpClient();

  // Get the player data from schachbund.de
  $request = $client->request('GET', 'https://www.schachbund.de/php/dewis/verein.php?zps=70107&format=xml');
  $response = $request->getBody();
  $parsed_response = (simplexml_load_string($response));

  // First we set execution to FALSE
  $import_dwz = FALSE;

  $current_time = new DateTime();
  //  $current_weekday = $current_time->format('D');
  $current_hour = $current_time->format('G');

  // Only execute the import during the night between 23:00 and 8:00
  if ($current_hour > 23 || $current_hour < 8) {
    $import_dwz = TRUE;
  };

  // Only execute if the timing is correct and thus $import_dwz == TRUE
  if ($import_dwz == TRUE) {
    foreach ($parsed_response->Spieler as $player) {
      $node_storage = Drupal::entityTypeManager()->getStorage('node');

      // Remove possible leading zeroes from Schachbund Member numbers
      $member_no = ltrim($player->mglnr->__toString(), 0);
      $fide_id = ltrim($player->fideid->__toString(), 0);

      // Make sure we only use players from HSK Lister Turm (Club ID = 70107)
      // Also only check players that have a DWZ
      if ($player->verein->__toString() == 70107 && !empty($player->dwz->__toString())) {
        $player_to_update_query = $node_storage->getQuery();
        $group = $player_to_update_query
          ->orConditionGroup()
          ->condition('field_member_no_dsb', $member_no)
          ->condition('field_fide_id', $fide_id);

        // Condition group to check if either the old dwz had no value or
        // the old one had a value and the new one is different from the old one.
        // We have to do this because if the old value is null the compare does not work.
        $dwz_changed_or_was_null = $player_to_update_query
          ->orConditionGroup()
          ->notExists('field_dwz')
          ->condition('field_dwz', $player->dwz->__toString(), '<>');

        $player_to_update = $player_to_update_query
          ->condition('type', 'player')
          ->condition($group)
          ->condition($dwz_changed_or_was_null)
          ->execute();

        if (!empty($player_to_update)) {
          foreach ($player_to_update as $nid) {
            $node = $node_storage->load($nid);
            // Get the old DWZ before we overwrite it
            if (!empty($node->field_dwz->value)) {
              $old_dwz = $node->field_dwz->value;
            }
            else {
              $old_dwz = 0;
            }
            // If the Fide ID matches, update the DWZ
            if($node->field_fide_id->value == $fide_id) {
              $node->set('field_dwz', $player->dwz->__toString());
              $node->save();
            }
            // Only continue if Fide ID does not match.
            elseif($node->field_fide_id->value != $fide_id && $node->field_member_no_dsb->value == $member_no) {
              $node->set('field_dwz', $player->dwz->__toString());
              $node->save();
            }
            // Add watchdog message about updated player

            $message = 'The DWZ of player ' . $node->getTitle();
            $message .= ' has been updated. Old DWZ: ' . $old_dwz . '; ';
            $message .= 'New DWZ: ' . $player->dwz->__toString();

            \Drupal::logger('dwz_update')->info($message);

          }

        }
      }
    }
  }
}
